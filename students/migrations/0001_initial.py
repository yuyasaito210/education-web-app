# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-01-05 06:06
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_measurement.models
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('non_rx_type', models.IntegerField(blank=True, choices=[(0, 'None'), (1, 'Tylenol'), (2, 'Ibuprofen'), (4, 'Both Ibuprofen or Tylenol')], null=True)),
                ('non_rx_notes', models.TextField(blank=True)),
                ('last_tetanus', models.DateField(blank=True, null=True)),
                ('restrictions', models.TextField(blank=True)),
                ('allergies', models.TextField(blank=True)),
                ('allergies_expanded', models.TextField(blank=True)),
                ('recent_trauma', models.TextField(blank=True)),
                ('dietary_needs', models.TextField(blank=True)),
                ('guid', models.CharField(max_length=140)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Medical Record',
                'verbose_name_plural': 'Medical Records',
            },
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('administration_times', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'Breakfast'), (2, 'Lunch'), (3, 'Dinner'), (4, 'Bedtime'), (5, 'Other...')], max_length=25)),
                ('administration_times_other', models.CharField(blank=True, max_length=255, verbose_name='Specify other administration time(s)')),
                ('medication_name', models.CharField(max_length=140, verbose_name='Name of Medication')),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('amount_unit', models.IntegerField(blank=True, choices=[(1, 'Tablet'), (2, 'Spray'), (3, 'Puff'), (4, 'Gummy'), (5, 'Tbsp.'), (6, 'tsp.'), (7, 'oz')], null=True)),
                ('notes', models.TextField(blank=True)),
                ('legacy_medication_id', models.IntegerField(blank=True, null=True)),
                ('legacy_dosage', models.CharField(blank=True, max_length=255, verbose_name='Dosage (legacy)')),
                ('legacy_breakfast', models.BooleanField(default=False)),
                ('legacy_lunch', models.BooleanField(default=False)),
                ('legacy_dinner', models.BooleanField(default=False)),
                ('legacy_bedtime', models.BooleanField(default=False)),
                ('legacy_other', models.BooleanField(default=False)),
                ('legacy_othertime', models.CharField(blank=True, max_length=255, verbose_name='Other time')),
                ('guid', models.CharField(max_length=140)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.MedicalRecord')),
            ],
            options={
                'verbose_name': 'Medication',
                'verbose_name_plural': 'Medications',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.IntegerField(blank=True, choices=[(1, '1st Grade'), (2, '2nd Grade'), (3, '3rd Grade'), (4, '4th Grade'), (5, '5th Grade'), (6, '6th Grade'), (7, '7th Grade'), (8, '8th Grade'), (9, "Children's house"), (10, 'Lower Elementary'), (11, 'Upper Elementary'), (12, 'Adolescent')], null=True)),
                ('name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.IntegerField(blank=True, choices=[(1, 'Female'), (2, 'Male'), (3, 'Gender fluid'), (4, 'Non-binary / Third gender'), (5, 'Prefer to self-describe'), (6, 'Prefer not to say')], null=True)),
                ('height', django_measurement.models.MeasurementField(blank=True, measurement_class='Distance', null=True)),
                ('weight', django_measurement.models.MeasurementField(blank=True, measurement_class='Mass', null=True)),
                ('photo_waiver', models.BooleanField(default=True, verbose_name='Photo Waiver Permission')),
                ('legacy_student_id', models.IntegerField(blank=True, null=True, verbose_name='Legacy Student ID')),
                ('legacy_account_id', models.IntegerField(blank=True, null=True, verbose_name='Legacy Account ID')),
                ('legacy_class_id', models.IntegerField(blank=True, null=True, verbose_name='Legacy Classroom ID')),
                ('guid', models.CharField(max_length=140)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_active', models.BooleanField(default=True)),
                ('current_school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.School')),
                ('guardian_list', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
            },
        ),
        migrations.CreateModel(
            name='StudentNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.IntegerField(blank=True, choices=[(0, 'General Note'), (1, 'Accident Report')], default=1, null=True)),
                ('location_desc', models.TextField(blank=True, verbose_name='Accident Location')),
                ('action_desc', models.TextField(blank=True, verbose_name='Accident Action')),
                ('note', models.TextField(blank=True, verbose_name='Accident Description')),
                ('after_action_desc', models.TextField(blank=True, verbose_name='After Accident')),
                ('parent_contacted', models.BooleanField(default=False)),
                ('parent_contacted_time', models.DateTimeField(blank=True, null=True)),
                ('parent_response', models.TextField(blank=True)),
                ('referred_physician', models.BooleanField(default=False)),
                ('physician_called', models.BooleanField(default=False)),
                ('ambulance_called', models.BooleanField(default=False)),
                ('guid', models.CharField(max_length=140)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author of note')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Student')),
            ],
            options={
                'verbose_name': 'Student Note',
                'verbose_name_plural': 'Student Notes',
            },
        ),
        migrations.AddField(
            model_name='medicalrecord',
            name='student',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='students.Student'),
        ),
    ]
